version: "3.9"  # optional since v1.27.0
services:
  sql:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    restart: unless-stopped
    container_name: sql_server2022
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=y
      - SA_PASSWORD=A&VeryComplex123Password
    networks:
      - mynetwork

  web_api:
    restart: unless-stopped
    build: .  # build the Docker image
    container_name: web_api_application
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=myuser
      - RABBITMQ_PASS=mypass
      - ConnectionStrings__DefaultConnection=Server=sql_server2022;Database=FriendlyApp;User=sa;Password=A&VeryComplex123Password;MultipleActiveResultSets=true
      - Logging__LogLevel__Default=Information
      - Logging__LogLevel__Microsoft.AspNetCore=Warning
      - AuthSettings__ValidIssuer=http://freindly.app
      - AuthSettings__ValidAudience=http://freindly.app
      - AuthSettings__Key=zendev225883rs2seminarski!=?((ace&SecureK3y))
      - AppUrl=https://localhost:7169
    ports:
      - "7169:80"
    depends_on:
      - sql
    networks:
      - mynetwork

  rabbitmq:
    image: rabbitmq:3-management
    hostname: "rabbitmq"
    environment:
    - RABBITMQ_DEFAULT_USER=myuser
    - RABBITMQ_DEFAULT_PASS=mypass
    labels:
      NAME: "rabbitmq"
    ports: 
    - "4369:4369"
    - "5671:5671"
    - "5672:5672"
    - "25672:25672"
    - "15671:15671"
    - "15672:15672"
    depends_on:
      - web_api
    networks:
      - mynetwork

  rabbitmq_consumer:
    build: 
      context: .
      dockerfile: ./ConsumerServiceApp/Dockerfile
    links:
      - web_api
    depends_on:
      - web_api
      - sql
      - rabbitmq
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge
